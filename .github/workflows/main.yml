name: Main Pipeline

on:
  push:
    branches: [ production ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      - name: Build & Deploy to Docker registry (CI)
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/quixnotes-backend:main
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/quixnotes-backend:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/quixnotes-backend:buildcache,mode=max

  deploy:
    runs-on: ubuntu-latest
    needs: [ build ]

    steps:
      - uses: actions/checkout@v3
      - name: SSH and deploy node app (CD)
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            docker login -u ${{secrets.DOCKER_USERNAME}} -p ${{secrets.DOCKER_PASSWORD}}
            docker pull ${{ secrets.DOCKER_USERNAME }}/quixnotes-backend:main
            docker rm -f quixnotes-backend
            docker run -d --name quixnotes-backend --net="host" --restart always ${{ secrets.DOCKER_USERNAME }}/quixnotes-backend:main
            docker image prune -f
            exit
